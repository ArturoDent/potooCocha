{"version":3,"names":[],"mappings":"","sources":["taxonomy.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar lastQuery;\r\nvar lastSpecies;\r\n\r\nvar species;\r\nvar families;\r\nvar numFamilies;\r\n\r\nvar birds = [];\r\n\r\nvar numSpeciesList = { \"Argentina\":999, \"Aruba\":219, \"Bolivia\":1381, \"Brazil\":1799, \"Chile\":475,\r\n                  \"Colombia\":1838, \"Curaçao\":218, \"Ecuador\":1620, \"French Guiana\":665,\r\n                  \"Guyana\":783, \"Paraguay\":694, \"Peru\":1780, \"Suriname\":724, \"Trinidad\":468,\r\n                  \"Uruguay\":444, \"Venezuela\":1382, \"Bonaire\":210, \"Falklands\":227, \"Malvinas\":227, \"South America\": 3376};\r\n\r\n// numSpecies does not include hypotheticals, so taken from http://www.museum.lsu.edu/~Remsen/SACCCountryLists.htm\r\n// numFamilies does not include Incertae Sedis-1 or Incertae Sedis-2\r\n\r\nvar numFamiliesList = { \"Argentina\":87, \"Aruba\":52, \"Bolivia\":78, \"Brazil\":91, \"Chile\":65,\r\n                  \"Colombia\":90, \"Curaçao\":50, \"Ecuador\":91, \"French Guiana\":81,\r\n                  \"Guyana\":78, \"Paraguay\":72, \"Peru\":88, \"Suriname\":80, \"Trinidad\":70,\r\n                  \"Uruguay\":72, \"Venezuela\":87, \"Bonaire\":47, \"Falklands\":48, \"Malvinas\":48, \"South America\": 102};\r\n\r\n// South America : 102 families not including 2 incertae \"families\", 3371 total spp.\r\n//                 which includes one hypothetical (in one country only) Blasck Turnstone\r\n\r\nvar currentTaxonomyCountry;\r\nvar currentTaxonomyCountryElement;\r\n\r\nvar taxonomyArticle;\r\nvar resultsFrag = \"\";\r\nvar taxFragHTML = \"\";\r\n\r\nvar taxPage;\r\nvar searchSpecials;\r\nvar searchResults;\r\n\r\nvar searchInput;\r\n\r\nvar lastResultsSpecies;\r\nvar lastIndex;\r\n\r\nvar searchSlideUpWrapper;\r\nvar searchSlideUpWrapper_height;\r\n\r\nvar taxInstructionsButton;\r\nvar searchInstructionsOpen = true;\r\n\r\nvar selectedFillColor    =  \"#eee\";\r\n\r\n/* global    selectedCountryFillColor currentMap   */\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n\r\n  taxonomyArticle = document.getElementById(\"taxonomyArticle\");\r\n\r\n  searchSlideUpWrapper               =  document.querySelector(\"#taxonomyArticle > div.slideUpWrapper\");\r\n\r\n  searchSlideUpWrapper.style.height  =  searchSlideUpWrapper.clientHeight + \"px\";\r\n  searchSlideUpWrapper_height        =  searchSlideUpWrapper.style.height;\r\n\r\n  taxInstructionsButton              =  document.querySelector(\".taxInstructionsButton\");\r\n  searchInput                        =  document.getElementById(\"searchInput\");\r\n  searchSpecials                     =  document.getElementById(\"searchSpecials\");\r\n\r\n  searchInput.addEventListener(\"input\", getQuery);\r\n  searchInput.addEventListener(\"change\", getQuery);\r\n  searchInput.addEventListener(\"click\", getQuery);\r\n  searchInput.addEventListener(\"textInput\", getQuery);\r\n  searchInput.addEventListener(\"focusin\", getQuery);\r\n\r\n  searchInput.addEventListener(\"input\", clearSearchInput);\r\n  searchInput.addEventListener(\"change\", clearSearchInput);\r\n  searchInput.addEventListener(\"click\", clearSearchInput);\r\n  searchInput.addEventListener(\"textInput\", clearSearchInput);\r\n  searchInput.addEventListener(\"keyup\", clearSearchInput);\r\n  searchInput.addEventListener(\"focusin\", clearSearchInput);\r\n\r\n  searchSpecials.addEventListener(\"click\", getSearchSpecialsQuery);\r\n\r\n  taxInstructionsButton.addEventListener(\"click\", showSearchInstructions);\r\n\r\n  taxInstructionsButton.addEventListener(\"mouseover\", function () { searchSlideUpWrapper.classList.add(\"hovering\"); });\r\n  taxInstructionsButton.addEventListener(\"mouseout\", function () { searchSlideUpWrapper.classList.remove(\"hovering\"); });\r\n\r\n  // focus, blur  ***\r\n\r\n  createTaxPageHTML();\r\n  getAjax(\"../data/occurrences.txt\", function (data) { loadIntoArray(data); });\r\n});\r\n\r\nfunction loadIntoArray(data)  {\r\n  birds = data.split(\"\\n\");\r\n}\r\n\r\nfunction animateScrollTop(el) {\r\n\r\n  // var step = el.scrollTop / (duration/25);\r\n  var step = 25;\r\n\r\n  (function animateScroll() {\r\n    el.scrollTop -= step;\r\n    if (el.scrollTop > 0) setTimeout(animateScroll, 25);\r\n  })();\r\n}\r\n\r\nfunction getAjax(url, success) {\r\n\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(\"GET\", url);\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState > 3 && xhr.status === 200) success(xhr.responseText);\r\n  };\r\n  xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n  xhr.send();\r\n  return xhr;\r\n}\r\n\r\nfunction showSearchInstructions(state)  {\r\n\r\n  if ( (state === true) || !searchInstructionsOpen)  {\r\n\r\n    searchSlideUpWrapper.style.height = searchSlideUpWrapper_height;\r\n    searchSlideUpWrapper.classList.remove(\"closeInstructions\");\r\n    // taxInstructionsButton.classList.remove(\"instructionsClosed\");\r\n\r\n    searchInstructionsOpen = true;\r\n\r\n    document.querySelector(\".taxInstructionsButton .tooltip\").innerHTML = \"Close the search instructions\";\r\n  }\r\n\r\n  else {\r\n\r\n    searchSlideUpWrapper.style.height = 0;\r\n    searchSlideUpWrapper.classList.add(\"closeInstructions\");\r\n    // taxInstructionsButton.classList.add(\"instructionsClosed\");\r\n\r\n    searchInstructionsOpen = false;\r\n\r\n    document.querySelector(\".taxInstructionsButton .tooltip\").innerHTML = \"Open the search instructions\";\r\n  }\r\n}\r\n\r\nfunction createTaxPageHTML ()  {\r\n\r\n  resultsFrag =  \"<div class='panel results-panel'>\";\r\n  resultsFrag += \"  <div id='countrySearch' class='closed'>\";\r\n  resultsFrag += \"    <span id='searchTerm'></span>\";\r\n  resultsFrag += \"  </div>\";\r\n  resultsFrag += \"  <ul id='searchResults' contenteditable='false'><li> &nbsp; &nbsp; search results will appear here...</li><li></li><li></li></ul>\";\r\n  resultsFrag += \"</div>\";\r\n\r\n  taxFragHTML = \"<article id='taxTreeArticle'>\";\r\n  taxFragHTML += \"  <div id='treeIntroText' class='flyoutPanel topFlyoutPanel'>&nbsp; numFamilies Families, numSpecies species</div>\";\r\n  taxFragHTML += \"  <div id='taxPage' class='panel' contenteditable='false'></div>\";\r\n  taxFragHTML += \"  <div id='taxPageButtons' class='flyoutPanel bottomFlyoutPanel'>Close all families</div>\";\r\n  taxFragHTML += \"</article>\";\r\n}\r\n\r\n/* global  mapsCollection taxonomyCountryButton */\r\n\r\nfunction loadCountryTaxonomy(evt)  {\r\n\r\n  window.closeCountryModal();\r\n\r\n  if (!document.getElementById(\"taxPage\")) {\r\n\r\n    // will lose eventListeners with innerHTML method, not true with insertAdjacentHTML\r\n\r\n    taxonomyArticle.insertAdjacentHTML(\"beforeend\", resultsFrag);\r\n    mapsCollection.insertAdjacentHTML(\"afterend\",  taxFragHTML);\r\n\r\n    taxPage        =  document.getElementById(\"taxPage\");\r\n    searchResults  =  document.getElementById(\"searchResults\");\r\n\r\n    taxPage.addEventListener(\"click\", toggleFamilyOpen);\r\n    searchResults.addEventListener(\"click\", gotoMatch);\r\n\r\n\t // show searchresults and taxPage panels first time a taxonomy country is selected\r\n\r\n    document.querySelector(\"#searchForm span\").classList.remove(\"grayed\");\r\n    searchSpecials.classList.remove(\"grayed\");\r\n  }\r\n\r\n  var taxCountry = (typeof evt === \"string\") ?  evt : evt.target.innerHTML;\r\n\r\n  if (currentTaxonomyCountry) {\r\n    currentTaxonomyCountryElement.classList.remove(\"taxHighlight\");\r\n    currentTaxonomyCountryElement.classList.remove(\"bothHighlights\");\r\n  }\r\n\r\n  if (lastQuery)   {\r\n    document.getElementById(\"countrySearch\").classList.remove(\"closed\");\r\n    document.getElementById(\"searchTerm\").innerHTML = taxCountry + \" : '\" + lastQuery + \"'\";\r\n    document.querySelector(\".results-panel\").style.opacity = \"1\";\r\n  }\r\n\r\n  // all samTax calls could be put into one if (taxCountry === \"South America\")  else\r\n\r\n  if (taxCountry === \"French Guiana\") {\r\n\r\n    getAjax(\"Countries/FrenchGuianaSACC.html\", updatetaxArticleQueries);\r\n    searchResults.classList.remove(\"samTax\");\r\n    taxPage.classList.remove(\"samTax\");\r\n  }\r\n\r\n  // because Curaçao is accented here but not in filenames\r\n  else if (taxCountry === \"Curaçao\") {\r\n\r\n    getAjax(\"Countries/CuracaoSACC.html\", updatetaxArticleQueries);\r\n    searchResults.classList.remove(\"samTax\");\r\n    taxPage.classList.remove(\"samTax\");\r\n  }\r\n\r\n  else if (taxCountry === \"South America\") {\r\n\r\n    getAjax(\"Countries/SouthAmericaSACC.html\", updatetaxArticleQueries);\r\n    searchResults.classList.add(\"samTax\");\r\n\r\n    // so hypotheticals and vagrants aren't selectable if South America is chosen\r\n\r\n    searchSpecials.querySelector(\"span:nth-of-type(3)\").classList.add(\"notAvailable\");\r\n    searchSpecials.querySelector(\"span:nth-of-type(5)\").classList.add(\"notAvailable\");\r\n\r\n    searchSpecials.classList.add(\"SAM\");\r\n    taxPage.classList.add(\"samTax\");\r\n  }\r\n\r\n  else if (taxCountry === \"Falklands/Malv.\") {\r\n\r\n    getAjax(\"Countries/FalklandsSACC.html\", updatetaxArticleQueries);\r\n    searchResults.classList.remove(\"samTax\");\r\n    taxPage.classList.remove(\"samTax\");\r\n    taxCountry = \"Falklands\";\r\n  }\r\n\r\n  else if (taxCountry) {\r\n\r\n    getAjax(\"Countries/\" + taxCountry + \"SACC.html\", updatetaxArticleQueries);\r\n    searchResults.classList.remove(\"samTax\");\r\n    taxPage.classList.remove(\"samTax\");\r\n  }\r\n\r\n  if (currentTaxonomyCountry === \"South America\" && taxCountry !== \"South America\")  {\r\n    searchSpecials.querySelector(\"span:nth-of-type(3)\").classList.remove(\"notAvailable\");\r\n    searchSpecials.querySelector(\"span:nth-of-type(5)\").classList.remove(\"notAvailable\");\r\n    searchSpecials.classList.remove(\"SAM\");\r\n  }\r\n\r\n  // remove space from within \"French Guiana\", svg id = \"FrenchGuiana\"\r\n  if (!lastQuery)  {\r\n\r\n    currentMap.querySelector(\".saveMapButton\").style.display = \"none\";\r\n    var temp = taxCountry.replace(\" \", \"\");\r\n    selectedCountryFillColor(temp, selectedFillColor);\r\n  }\r\n\r\n  else if (lastQuery === \"endemic\" || lastQuery === \"hypothetical\"  || lastQuery === \"vagrant\" ||\r\n      lastQuery === \"incertae\" || lastQuery === \"extinct\")  {\r\n\r\n    currentMap.querySelector(\".saveMapButton\").style.display = \"none\";\r\n    selectedCountryFillColor(taxCountry.replace(\" \", \"\"), selectedFillColor);\r\n  }\r\n\r\n  currentTaxonomyCountry = taxCountry;\r\n\r\n  taxonomyCountryButton.innerHTML = taxCountry;\r\n  if (taxCountry === \"Falklands\") taxonomyCountryButton.innerHTML = \"Malvinas\";\r\n\r\n  currentTaxonomyCountryElement = evt.target;\r\n  currentTaxonomyCountryElement.classList.add(\"taxHighlight\");\r\n  if (currentTaxonomyCountryElement.classList.contains(\"checkHighlight\")) currentTaxonomyCountryElement.classList.add(\"bothHighlights\");\r\n\r\n  taxonomyCountryButton.classList.remove(\"needsAttention\");\r\n  taxonomyCountryButton.classList.add(\"highlight\");\r\n\r\n  document.querySelector(\"#treeIntroText\").innerHTML = taxCountry + \" &nbsp; : &nbsp; \" + numFamiliesList[taxCountry] + \" families, \" + numSpeciesList[taxCountry] + \" species *\";\r\n  if (taxCountry === \"Falklands\")\r\n    document.querySelector(\"#treeIntroText\").innerHTML = \"Falklands/Malvinas\" + \" &nbsp; : &nbsp; \" + numFamiliesList[taxCountry] + \" families, \" + numSpeciesList[taxCountry] + \" species *\";\r\n\r\n  document.querySelector(\".colorKey\").style.opacity = \"0.9\";\r\n\r\n  // currentMap.querySelector(\".saveMapButton\").style.display = \"block\";\r\n  // currentMap.querySelector(\".colorKey\").style.opacity = \"0.9\";\r\n\r\n  animateScrollTop(taxPage);\r\n}\r\n\r\nfunction updatetaxArticleQueries(data) {\r\n\r\n  // <ul id='tree'>\r\n  taxPage.innerHTML = data;\r\n\r\n  species = document.getElementById(\"tree\").getElementsByTagName(\"li\");\r\n  families = taxPage.querySelectorAll(\"#tree .familyOpen, #tree .family\");\r\n  numFamilies = families.length;\r\n\r\n\t// this restricts opening and closing to only the family names\r\n\t// _(\"#taxPage .fcommon, #taxPage .fscientific\").on(\"click\", toggleFamilyOpen);\r\n  if (lastQuery) searchTree(lastQuery);\r\n  document.querySelector(\"#taxPageButtons\").addEventListener(\"click\", closeAllFamilies);\r\n}\r\n\r\nfunction clearSearchInput()  {\r\n  searchInput.placeholder = \"\";\r\n  searchInput.removeEventListener(\"input\", clearSearchInput);\r\n  searchInput.removeEventListener(\"change\", clearSearchInput);\r\n  searchInput.removeEventListener(\"click\", clearSearchInput);\r\n  searchInput.removeEventListener(\"textInput\", clearSearchInput);\r\n  searchInput.removeEventListener(\"focusin\", clearSearchInput);\r\n}\r\n\r\n  //  Caller :\r\n  //     _(\"#searchInput\").on (\"input change click textInput focusin\", getQuery);\r\n  //                             keyup removed\r\nfunction getQuery(event)  {\r\n\r\n  var badIndex = searchInput.value.search(/[^a-zñã'\\s\\*\\?-]/i);\r\n\r\n  if ( badIndex !== -1) {\r\n    searchResults.innerHTML = \"<li></li><li> &nbsp; &nbsp; character '\" + searchInput.value[badIndex] + \"' not allowed </li><li></li>\";\r\n    searchResults.style.height = \"55px\";\r\n    return;\r\n  }\r\n\r\n  // wait for at least two characters\r\n  if (searchInput.value.length < 2)   {\r\n    return;\r\n  }\r\n\r\n  var e = event || window.event;\r\n\r\n  // all the same *** ?\r\n  if (e.type === \"textinput\")   {\r\n    searchTree(searchInput.value);\r\n    e.preventDefault();\r\n    return false;\r\n  }\r\n  else if (e.type === \"input\")             {  searchTree(searchInput.value);  }\r\n\telse if (e.type === \"onpropertychange\")  {  searchTree(searchInput.value);  }\r\n}\r\n\r\nfunction getSearchSpecialsQuery(evt)  {\r\n\r\n  // <span><a>endemic</a> (e) </span>\r\n  var term = evt.target.textContent.split(\" \")[0];\r\n  searchTree(term);\r\n}\r\n\r\nfunction escapeRegExp(string) {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n\r\nfunction searchTree(query2) {\r\n\r\n  var query;\r\n  query2 = escapeRegExp(query2);\r\n\r\n  document.querySelector(\".colorKey\").style.opacity = \"0.9\";\r\n\r\n  var numFound = 0;\r\n\r\n  var observer = new MutationObserver(function() {\r\n\r\n    searchResults.style.height = \"auto\";\r\n\r\n    if (searchResults.scrollHeight >= 300) searchResults.style.height = \"315px\";\r\n    else {\r\n      searchResults.style.height = searchResults.scrollHeight + 15 + \"px\";\r\n    }\r\n  });\r\n\r\n  observer.observe(searchResults, { childList: true });\r\n\r\n  if (!currentTaxonomyCountry) {\r\n\r\n    taxonomyCountryButton.classList.add(\"needsAttention\");\r\n    return;\r\n  }\r\n\r\n  document.getElementById(\"searchResults\").classList.remove(\"fadeIn\");\r\n  document.querySelector(\".results-panel\").style.opacity = \"1\";\r\n\r\n  lastQuery = query2;\r\n\r\n  if (lastQuery)  {\r\n    document.getElementById(\"countrySearch\").classList.remove(\"closed\");\r\n    if (currentTaxonomyCountry === \"Falklands\")  {\r\n      document.getElementById(\"searchTerm\").innerHTML = \"Falklands/Malvinas\" + \" : '\" + lastQuery + \"'\";\r\n    }\r\n    else document.getElementById(\"searchTerm\").innerHTML = currentTaxonomyCountry + \" : '\" + lastQuery + \"'\";\r\n  }\r\n  else {\r\n    searchResults.innerHTML = \"<li></li><li> &nbsp; &nbsp; search results will appear here</li><li></li>\";\r\n    searchResults.classList.add(\"fadeIn\");\r\n    searchResults.style.top = 0;\r\n    return;\r\n  }\r\n\r\n  animateScrollTop(searchResults);\r\n\r\n    // reset all families.cloned to false, used to insert new families into searchResults\r\n  for (var i = 0; i < numFamilies; i++) {\r\n    families[i].cloned = false;\r\n  }\r\n\r\n    // boolean that search input term was bad or missing\r\n  var warning = false;\r\n\r\n  if (lastSpecies && lastSpecies.classList.contains(\"active\")) {\r\n    lastSpecies.classList.remove(\"active\");\r\n  }\r\n\r\n  var matches = [];\r\n  var j = 0;\r\n  var entry;\r\n  var eClass;\r\n  var sL = species.length;\r\n\r\n  if (query2 === \"endemic\" || query2 === \"hypothetical\"  || query2 === \"vagrant\" ||\r\n      query2 === \"incertae\" || query2 === \"extinct\")  {\r\n\r\n    var special;\r\n\r\n    if (query2 === \"endemic\") special = document.getElementById(\"tree\").getElementsByClassName(\"endemic\");\r\n    else if (query2 === \"extinct\") special = document.getElementById(\"tree\").getElementsByClassName(\"extinct\");\r\n    else if (query2 === \"hypothetical\") special = document.getElementById(\"tree\").getElementsByClassName(\"hy\");\r\n    else if (query2 === \"vagrant\") special = document.getElementById(\"tree\").getElementsByClassName(\"va\");\r\n    else if (query2 === \"incertae\") special = document.getElementById(\"tree\").getElementsByClassName(\"ince\");\r\n\r\n    for (var k = 0; k < special.length ; k++ )  {\r\n\r\n      // check if family has already been cloned\r\n      if (special[k].parentNode.parentNode.parentNode.cloned !== true) {\r\n\r\n        matches[j++] = special[k].parentNode.parentNode.parentNode.cloneNode(true);\r\n        special[k].parentNode.parentNode.parentNode.cloned = true;\r\n      }\r\n      matches[j++] = special[k].parentNode.cloneNode(true);\r\n    }\r\n  }\r\n      // not endemic, extinct, hypothetical, vagrant or incertae\r\n  else {\r\n\r\n    query2 = query2.replace(/^\\s+|\\s+$/g, \"\");\r\n\r\n        //  wildcards * and ? ::\r\n    query2 = query2.replace(/\\\\\\*/g, \"[a-zA-Z'ñã\\\\s-]+\");\r\n    query2 = query2.replace(/\\\\\\?/g, \"[a-zA-Z'ñã\\\\s-]\");\r\n\r\n      // SACC only uses ñ and São, no other accented characters\r\n    query2 = query2.replace(/n/g, \"(n|ñ)\");\r\n    query2 = query2.replace(/a/g, \"(a|ã)\");\r\n\r\n    query2 = query2.replace(/ú/g, \"u\");\r\n    query2 = query2.replace(/á/g, \"a\");\r\n    query2 = query2.replace(/ó/g, \"o\");\r\n    query2 = query2.replace(/í/g, \"i\");\r\n    query2 = query2.replace(/ç/g, \"c\");\r\n\r\n      // now database can have any number of spaces between genus and species\r\n    query2 = query2.replace(/\\s+/g, \"\\\\s+\");\r\n\r\n    if (query2) {\r\n      query = query2;\r\n    }\r\n    else {\r\n      query = searchInput.value.replace(/^\\s+|\\s+$/g, \"\");\r\n      if   ( query  ===   \"type here\") warning = true;\r\n      else if   ( query  ===   \"\")  warning = true;\r\n    }\r\n\r\n      // bad or missing search term\r\n    if (warning)  {\r\n      searchResults.innerHTML = \"<li></li><li> &nbsp; &nbsp; no search term entered</li><li></li>\";\r\n      document.getElementById(\"searchResults\").classList.add(\"fadeIn\");\r\n      searchResults.style.height = \"55px\";\r\n\r\n      return;\r\n    }\r\n\r\n    var pattern = new RegExp(query, \"i\");\r\n\r\n      // nodes must be cloned otherwise they are removed from the tree !!\r\n\r\n    for (i = 0; i < sL ; i++ )  {\r\n\r\n      entry = species[i];\r\n      eClass = entry.className;\r\n\r\n      if (entry.firstChild.textContent.match(pattern) || entry.childNodes[1].textContent.match(pattern)) {\r\n\r\n        if (eClass === \"family\" || eClass === \"familyOpen\")\r\n          entry.cloned = true;\r\n\r\n        var eParPar = entry.parentNode.parentNode;\r\n\r\n        if (eClass !== \"family\" && eClass !== \"familyOpen\"\r\n          && eParPar.cloned !== true) {\r\n\r\n          matches[j++] = eParPar.cloneNode(true);\r\n          eParPar.cloned = true;\r\n        }\r\n        matches[j++] = entry.cloneNode(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (matches.length === 0)  {\r\n    searchResults.innerHTML = \"<li></li><li> &nbsp; &nbsp; no matching results found</li><li></li>\";\r\n    document.getElementById(\"searchResults\").classList.add(\"fadeIn\");\r\n    searchResults.style.height = \"55px\";\r\n    return;\r\n  }\r\n\r\n  var z;\r\n  var matchClass;\r\n    // if list isn't set to \"\", it defaults to undefined\r\n  var list = \"\";\r\n\r\n  for (k = 0; k < matches.length ; k++ )  {\r\n\r\n    matchClass = matches[k].className;\r\n\r\n    if (matchClass === \"family\" || matchClass === \"familyOpen\") {\r\n\r\n      list += \"<li class='family'><span class='fco'>\";\r\n      list += matches[k].firstChild.textContent + \"</span><span class='fsc'>\";\r\n\r\n          // <li class=\"family\"><div class=\"fcommon\">INCERTAE SEDIS-2</div><div class=\"fscientific\"> </div>\r\n                                                                                 // must have space ^ here\r\n                                                                                 // or handle as below\r\n\r\n      list += (matches[k].childNodes[1].firstChild) ? matches[k].childNodes[1].firstChild.nodeValue : \" \";\r\n      list += \"</span></li>\";\r\n\r\n      // only matched one family, get all its species and add them to list\r\n      if (matches.length === 1) {\r\n\r\n        for (z = 0; z < matches[0].children[2].children.length; z++) {\r\n          list += \"<li>\" + matches[0].children[2].children[z].innerHTML + \"</li>\";\r\n        }\r\n        numFound = z;\r\n      }\r\n    }  // end of family/familyOpen\r\n\r\n    else if (matchClass === \"fsc\")  {  /* do nothing */ }\r\n\r\n    else {\r\n      matches[k].style.textShadow = \"none\";  // *** ?\r\n      list += \"<li data-i='\" +  matches[k].getAttribute(\"data-i\") + \"' class='bird'>\" + matches[k].innerHTML + \"</li>\";\r\n      numFound++;\r\n    }\r\n  }\r\n\r\n  searchResults.innerHTML = list;\r\n\r\n  document.getElementById(\"searchResults\").classList.add(\"fadeIn\");\r\n\r\n  lastQuery = lastQuery.replace(/\\\\\\*/g, \"*\");\r\n  lastQuery = lastQuery.replace(/\\\\\\?/g, \"?\");\r\n\r\n  if (currentTaxonomyCountry === \"Falklands\") {\r\n    document.getElementById(\"searchTerm\").innerHTML = \"Malvinas/Falklands\" + \" : '\" + lastQuery + \"'&nbsp;&nbsp;&nbsp;   [ \" + numFound + \" species ]\";\r\n  }\r\n  else {\r\n    document.getElementById(\"searchTerm\").innerHTML = currentTaxonomyCountry + \" : '\" + lastQuery + \"'&nbsp;&nbsp;&nbsp;   [ \" + numFound + \" species ]\";\r\n  }\r\n  return;\r\n}\r\n\r\n// <ul id=\"searchResults\"></ul>\r\nfunction gotoMatch(e) {\r\n\r\n  currentMap.querySelector(\".colorKey\").style.opacity = \"0.9\";\r\n\r\n  if (lastSpecies && lastSpecies.classList.contains(\"active\")) {\r\n    lastSpecies.classList.remove(\"active\");\r\n  }\r\n\r\n  var ev = e || window.event;  // window.event for IE8-\r\n  var clicked = ev.target;\r\n  var clickedPar = clicked.parentNode;\r\n  var clickedClass = clicked.className;\r\n\r\n  if (clicked.textContent.replace(/^\\s+|\\s+$/g, \"\")      ===  \"no matching results found\")  return;\r\n  else if (clicked.textContent.replace(/^\\s+|\\s+$/g, \"\") ===  \"no search term entered\")  return;\r\n  else if (clicked.textContent.replace(/^\\s+|\\s+$/g, \"\") ===  \"search results will appear here\") return;\r\n  else if (clicked.textContent.replace(/^\\s+|\\s+$/g, \"\") ===  \"\")  return;\r\n\r\n    // goto family level else to <li>commom scientific\r\n  if (clickedClass === \"family\") {\r\n    clicked = ev.target;\r\n  }\r\n  else if (clickedClass === \"fco\")  {\r\n    clicked = clickedPar;\r\n  }\r\n  else if (clickedClass === \"fsc\")  {\r\n    clicked = clickedPar;\r\n  }\r\n  else if (clickedClass.match(/co/) !== null) {\r\n    clicked = clickedPar;\r\n  }\r\n  else if (clickedClass === \"bird\")  {\r\n    clicked = ev.target;\r\n  }\r\n  else {\r\n    clicked = clickedPar;\r\n  }\r\n\r\n  var sLen = species.length;\r\n  var entry;\r\n  var eText = clicked.textContent;\r\n\r\n  for (var i = 0; i < sLen; i++ ) {\r\n\r\n    entry = species[i];\r\n\r\n      // match if clicked = common, scientific or default\r\n    if (entry.textContent === eText)  {\r\n\r\n      var familyTemp = entry.parentNode;\r\n\r\n      if (!familyTemp.classList.contains(\"open\")) {\r\n\r\n        familyTemp.classList.add(\"open\");\r\n        familyTemp.parentNode.className = \"familyOpen\";\r\n      }\r\n        // put highlighted bird at top of taxPage\r\n        // entry.scrollIntoView(true);\r\n      taxPage.scrollTop = familyTemp.parentNode.offsetTop + entry.offsetTop - 100;\r\n\r\n      entry.className = \"active\";\r\n\r\n      lastSpecies = entry;\r\n      lastIndex = Number(entry.getAttribute(\"data-i\"));\r\n      highlightSAMmap(lastIndex, \"currentMap\");\r\n\r\n      if (lastResultsSpecies) lastResultsSpecies.classList.toggle(\"active\");\r\n\r\n      clicked.classList.toggle(\"active\");\r\n      lastResultsSpecies = clicked;\r\n      addBirdNameToMap(entry);\r\n      break;\r\n    }\r\n\r\n      // match in family, fcommon, fscientific  ||\r\n      // \"INCERTAE SEDIS-1 \" for some reason eText returns a space at the end of the INCERTAE SEDIS's\r\n    else if ((entry.firstChild.textContent + entry.firstChild.nextSibling.textContent) ===  eText ||\r\n              eText  === (entry.firstChild.textContent + \" \")  ) {\r\n\r\n      var family2 = entry.children[2];\r\n\r\n      if (family2.classList.contains(\"closed\")) {\r\n        family2.classList.add(\"open\");\r\n        family2.parentNode.className = \"familyOpen\";\r\n      }\r\n\r\n      taxPage.scrollTop = entry.offsetTop;\r\n      //    put family at top of taxPage\r\n      //   entry.scrollIntoView(true);  screws up IE\r\n\r\n      lastSpecies = family2;\r\n\r\n      if (lastResultsSpecies)  {\r\n        lastResultsSpecies.classList.toggle(\"active\");\r\n        lastResultsSpecies = null;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction addBirdNameToMap(name)  {\r\n\r\n  var temp = \"\";\r\n\r\n  if ( name ) {\r\n    temp = \"<span>\" + name.firstChild.textContent + \"</span><br/><span>\" + name.lastChild.textContent + \"</span>\";\r\n    document.getElementById(\"currentBirdName\").innerHTML = temp;\r\n  }\r\n  else {\r\n    document.getElementById(\"currentBirdName\").innerHTML = temp;\r\n  }\r\n}\r\n\r\n/* global highlightSAMmap */\r\n\r\nfunction toggleFamilyOpen(event)  {\r\n  event.stopPropagation();\r\n\r\n  // taxPage is not open yet\r\n  if (!numFamilies) return;\r\n\r\n  document.querySelector(\".colorKey\").style.opacity = \"0.9\";\r\n\r\n  event = event || window.event;  // window.event for IE8-\r\n  var familyTarget;\r\n  var thisSpecies      =  event.target;\r\n  var speciesClass = thisSpecies.className;\r\n\r\n  // want species to = <ul class=\"birds\"> to toggle display\r\n  if (speciesClass === \"family\" || speciesClass === \"familyOpen\") {\r\n    familyTarget = event.target.firstChild.nextSibling.nextSibling.nextSibling;\r\n  }\r\n  else if (speciesClass === \"fco\") {\r\n    familyTarget = event.target.nextSibling.nextSibling.nextSibling;\r\n  }\r\n  else if (speciesClass === \"fsc\") {\r\n    familyTarget = event.target.nextSibling.nextSibling;\r\n  }\r\n\r\n  if (familyTarget && !familyTarget.classList.contains(\"open\")) {\r\n\r\n    familyTarget.classList.add(\"open\");\r\n    familyTarget.parentNode.className = \"familyOpen\";\r\n\r\n    // clicked on a closed family\r\n    // check to see if family at bottom of taxPage, if so, open and move up ?*\r\n\r\n      // Element.scrollIntoViewIfNeeded()  webkit only\r\n\r\n    var taxPageHeight = taxPage.getBoundingClientRect().height;\r\n\r\n    if (familyTarget.offsetTop - taxPage.scrollTop > taxPageHeight - 24)  {\r\n\r\n        //  will the entire family fit in taxPage ?\r\n\r\n      if (familyTarget.parentNode.clientHeight > taxPageHeight)\r\n        taxPage.scrollTop = familyTarget.parentNode.offsetTop;\r\n\r\n      else\r\n        taxPage.scrollTop += familyTarget.lastElementChild.offsetTop + familyTarget.lastElementChild.clientHeight;\r\n    }\r\n    //  show family and numSpecies in that family\r\n    document.querySelector(\"#treeIntroText\").innerHTML = currentTaxonomyCountry + \"  &nbsp; : &nbsp; \" + familyTarget.parentNode.children[1].textContent + \" has \" + familyTarget.children.length + \" species\";\r\n  }\r\n\r\n  else if (familyTarget)  {\r\n\r\n    familyTarget.classList.remove(\"open\");\r\n    familyTarget.parentNode.className = \"family\";\r\n\r\n    var reset = familyTarget.parentNode.querySelectorAll(\".active\");\r\n\r\n    if (reset.length) {\r\n      reset[0].className = \"\";\r\n    }\r\n    document.querySelector(\"#treeIntroText\").innerHTML = currentTaxonomyCountry + \"   &nbsp; : &nbsp; \" + numFamiliesList[currentTaxonomyCountry] + \" families, \" + numSpeciesList[currentTaxonomyCountry] + \" species\";\r\n  }\r\n    //   clicked on a species in the taxTree\r\n  if (!familyTarget)  {\r\n\r\n      // clicked in between common and scientific names in an open family, i.e., the LI element, not a DIV/SPAN\r\n\r\n      //    <ul class=\"span\">\r\n      //    <li data-i=\"2692\"><span>Tepui Wren</div><div>Troglodytes rufulus</span></li>\r\n\r\n    if (thisSpecies.parentNode.classList.contains(\"birds\")) {\r\n      thisSpecies = thisSpecies.firstChild;\r\n    }\r\n\r\n    thisSpecies.parentNode.className = \"active\";\r\n\r\n    if (thisSpecies.parentNode !== lastSpecies) {\r\n      if (lastSpecies && lastSpecies.classList.contains(\"active\")) {\r\n        lastSpecies.classList.remove(\"active\");\r\n      }\r\n    }\r\n\r\n    lastSpecies = thisSpecies.parentNode;\r\n    if (lastResultsSpecies) lastResultsSpecies.classList.toggle(\"active\");\r\n    lastResultsSpecies = null;\r\n\r\n    addBirdNameToMap(thisSpecies.parentNode);\r\n    lastIndex = Number(thisSpecies.parentNode.getAttribute(\"data-i\"));\r\n    highlightSAMmap(lastIndex, \"currentMap\");\r\n\r\n    document.querySelector(\"#treeIntroText\").innerHTML = currentTaxonomyCountry + \"   &nbsp; : &nbsp; \" + numFamiliesList[currentTaxonomyCountry] + \" families, \" + numSpeciesList[currentTaxonomyCountry] + \" species *\";\r\n  }\r\n}\r\n\r\nfunction closeAllFamilies()  {\r\n\r\n  var openedFamilies = taxPage.querySelectorAll(\"#tree .familyOpen ul\");\r\n  var len = openedFamilies.length;\r\n\r\n  for (var i = 0; i < len; i++)  {\r\n\r\n    openedFamilies[i].classList.remove(\"open\");\r\n    openedFamilies[i].classList.add(\"closed\");\r\n\r\n    openedFamilies[i].parentNode.className = \"family\";\r\n  }\r\n  // **** reset families and species of country\r\n  document.querySelector(\"#treeIntroText\").innerHTML = currentTaxonomyCountry + \"   &nbsp; : \" + numFamiliesList[currentTaxonomyCountry] + \" families, \" + numSpeciesList[currentTaxonomyCountry] + \" species *\";\r\n}\r\n// # sourceMappingURL=maps/taxonomy.js.map"],"file":"taxonomy.js","sourceRoot":"/source/"}