{"version":3,"names":[],"mappings":"","sources":["birdMapFactory.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar deleteMapButton;\r\nvar saveMapButton;\r\nvar mapsCollection;\r\nvar deleteAllMapsButton;\r\n\r\nvar currentID = 0;\r\n\r\n/* global  prepareSVGstyles highlightSAMmap map lastIndex  */\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  saveMapButton = document.querySelector(\".saveMapButton\");\r\n  saveMapButton.addEventListener(\"click\", saveCurrentMap);\r\n  mapsCollection = document.getElementById(\"mapsCollection\");\r\n});\r\n\r\nfunction revealMapsCollection() {\r\n\r\n  // if mapsCollection.classList.contains(\"open\") mapsCollection.classList.remove(\"open\");\r\n  // else mapsCollection.classList.add(\"open\");\r\n\r\n  // if (evt.type !== \"mouseenter\") {\r\n  //   mapsCollection.classList.remove(\"open\");\r\n  //   map.classList.remove(\"shiftUp\");\r\n  // }\r\n  // else {\r\n  mapsCollection.classList.toggle(\"open\");\r\n  // console.log(mapsCollection.getBoundingClientRect().height);\r\n  // mapsCollection.style.transform = \"translateY(-\" +  parseInt(mapsCollection.getBoundingClientRect().height) + \"px)\";\r\n\r\n  map.classList.toggle(\"shiftUp\");\r\n  // }\r\n}\r\n\r\nfunction deleteMap(evt)  {\r\n\r\n  evt.stopPropagation();\r\n\r\n  var birdInstance = this.parentNode;\r\n\r\n  //  FIXME  :  (rmemove any listeners first)\r\n\r\n  birdInstance.parentNode.removeChild(this.parentNode);\r\n\r\n  // birdInstance.addEventListener(\"transitionend\", birdInstance.parentNode.removeChild(this.parentNode), false);\r\n  // birdInstance.classList.add(\"removed\");\r\n\r\n  map.querySelector(\".saveMapButton\").style.display = \"block\";\r\n\r\n  // var len = mapsCollection.children.length;\r\n  var len = mapsCollection.getElementsByClassName(\"thinify smallBird\").length;\r\n\r\n  if (len === 0)  {\r\n\r\n    mapsCollection.classList.remove(\"namesOnlySeen\");\r\n    mapsCollection.removeEventListener(\"click\", revealMapsCollection);\r\n    // mapsCollection.removeEventListener(\"mouseenter\", revealMapsCollection);\r\n    deleteAllMapsButton.removeEventListener(\"click\", deleteAllMaps);\r\n\r\n    mapsCollection.classList.remove(\"open\");\r\n    map.classList.remove(\"shiftUp\");\r\n  }\r\n}\r\n\r\nfunction saveCurrentMap()  {\r\n\r\n  // var len = mapsCollection.children.length;\r\n\r\n  var len = mapsCollection.getElementsByClassName(\"thinify smallBird\").length;\r\n  if (len === 5)  return;\r\n\r\n\t// clone node, remove ids so not duplicate\r\n\t// reattach eventListeners\r\n\r\n  var thisInstance = map.children[0];\r\n\r\n  var dupNode = thisInstance.cloneNode(true);\r\n  dupNode.classList.remove(\"birdMapInstance\");\r\n  dupNode.classList.add(\"thinify\");\r\n  dupNode.classList.add(\"smallBird\");\r\n\r\n  dupNode.querySelector(\".birdName\").classList.add(\"smallBirdText\");\r\n  dupNode.querySelector(\".colorKey\").style.opacity = \"0\";\r\n  dupNode.querySelector(\".colorKey\").style.display = \"none\";\r\n\r\n\r\n  dupNode.querySelector(\".birdName\").removeAttribute(\"id\");\r\n  dupNode.querySelector(\".drawing\").removeAttribute(\"id\");\r\n  dupNode.querySelector(\".drawing\").classList.add(\"smallBirdDrawing\");\r\n\r\n  dupNode.querySelector(\".drawing\").firstElementChild.setAttribute(\"id\", \"thin\" + currentID);\r\n\r\n  dupNode.removeAttribute(\"id\");\r\n\r\n  if (len === 0) {\r\n    mapsCollection.addEventListener(\"click\", revealMapsCollection);\r\n    mapsCollection.classList.add(\"namesOnlySeen\");\r\n    // mapsCollection.addEventListener(\"mouseenter\", revealMapsCollection);\r\n\r\n    deleteAllMapsButton = document.getElementById(\"deleteAllMapsButton\");\r\n    deleteAllMapsButton.addEventListener(\"click\", deleteAllMaps);\r\n  }\r\n  else if (len === 4)  {\r\n    map.querySelector(\".saveMapButton\").style.display = \"none\";\r\n  }\r\n\r\n  mapsCollection.appendChild(dupNode);\r\n\r\n  deleteMapButton = dupNode.querySelector(\".deleteMapButton\");\r\n  deleteMapButton.addEventListener(\"click\", deleteMap);\r\n\r\n  document.getElementById(\"thin\" + currentID).onload = function () {\r\n    // prepareSVGstyles(\"thin\" + currentID);\r\n\r\n    // fillSAMmap();\r\n\r\n    highlightSAMmap(lastIndex, \"thin\" + currentID);\r\n    dupNode.querySelector(\".birdName.smallBirdText\").classList.add(\"highlightName\");\r\n\r\n    mapsCollection.lastChild.style.opacity = \"1\";\r\n    currentID++;\r\n  };\r\n}\r\n\r\nfunction deleteAllMaps(evt) {\r\n\r\n  evt.stopPropagation();\r\n\r\n  var maps = mapsCollection.getElementsByClassName(\"thinify smallBird\");\r\n  var len = maps.length;\r\n\r\n  for (var i = 1; i <= len; i++) {\r\n    mapsCollection.removeChild(mapsCollection.childNodes[3]);\r\n  }\r\n\r\n  mapsCollection.classList.remove(\"namesOnlySeen\");\r\n  mapsCollection.removeEventListener(\"click\", revealMapsCollection);\r\n  deleteAllMapsButton.removeEventListener(\"click\", deleteAllMaps);\r\n\r\n  mapsCollection.classList.remove(\"open\");\r\n  map.classList.remove(\"shiftUp\");\r\n  map.querySelector(\".saveMapButton\").style.display = \"block\";\r\n}\r\n// # sourceMappingURL=maps/birdMapFactory.js.map"],"file":"../birdMapFactory.js"}